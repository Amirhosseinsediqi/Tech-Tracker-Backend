services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    command: mongod --config /etc/mongod.conf
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongod.conf:/etc/mongod.conf:ro
      - mongodb_logs:/var/log/mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    networks:
      - app-network
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  dev:
    build:
      context: ./
      target: dev
    ports:
      - "5502:5501"
    environment:
      - NODE_ENV=development
      - PORT=5501
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=${REDIS_URI}
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/meetings?authSource=admin
      - SESSION_SECRET=${SESSION_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ZOOM_ACCOUNT_ID=${ZOOM_ACCOUNT_ID}
      - ZOOM_CLIENT_ID=${ZOOM_CLIENT_ID}
      - ZOOM_CLIENT_SECRET=${ZOOM_CLIENT_SECRET}
      - ZOOM_WEBHOOK_SECRET_TOKEN=${ZOOM_WEBHOOK_SECRET_TOKEN}
      - ZOOM_API_URL=${ZOOM_API_URL}
      - EMAIL_USER=${EMAIL_USER}
      - SPREADSHEET_NAME=${SPREADSHEET_NAME}
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:5501/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    networks:
      - app-network

  prod:
    build:
      context: ./ 
      target: production
    container_name: backend-prod
    ports:
      - "5501:5501"
    environment:
      - NODE_ENV=production
      - PORT=5501
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=${REDIS_URI}
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/meetings?authSource=admin
      - SESSION_SECRET=${SESSION_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ZOOM_ACCOUNT_ID=${ZOOM_ACCOUNT_ID}
      - ZOOM_CLIENT_ID=${ZOOM_CLIENT_ID}
      - ZOOM_CLIENT_SECRET=${ZOOM_CLIENT_SECRET}
      - ZOOM_WEBHOOK_SECRET_TOKEN=${ZOOM_WEBHOOK_SECRET_TOKEN}
      - ZOOM_API_URL=${ZOOM_API_URL}
      - EMAIL_USER=${EMAIL_USER}
      - SPREADSHEET_NAME=${SPREADSHEET_NAME}
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:5501/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    networks:
      - app-network

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/backend/data/redis
      o: bind
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/backend/data/mongodb
      o: bind
  mongodb_config:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/backend/data/mongodb_config
      o: bind
  mongodb_logs:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/backend/data/mongodb_logs
      o: bind

networks:
  app-network:
    driver: bridge