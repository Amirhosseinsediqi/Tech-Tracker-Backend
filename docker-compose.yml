services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    command: ["mongod", "--config", "/etc/mongod.conf"]
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongod.conf:/etc/mongod.conf:ro
    environment:
      - MONGODB_INITDB_DATABASE=meetings
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped


  dev:
    build:
      context: ./ 
      target: dev
    ports:
      - "5502:5501"
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - MONGODB_URI=mongodb://mongodb:27017/meetings
      - SESSION_SECRET=${SESSION_SECRET}
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: always
    stop_grace_period: 120s
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - app-network

  prod:
    build:
      context: ./
      target: production
    container_name: backend-prod
    ports:
      - "5501:5501"
    environment:
      NODE_ENV: production
      MONGO_URL: mongodb://mongodb:27017/meetings
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      ZOOM_ACCOUNT_ID: ${ZOOM_ACCOUNT_ID}
      ZOOM_CLIENT_ID: ${ZOOM_CLIENT_ID}
      ZOOM_CLIENT_SECRET: ${ZOOM_CLIENT_SECRET}
      ZOOM_WEBHOOK_SECRET_TOKEN: ${ZOOM_WEBHOOK_SECRET_TOKEN}
      ZOOM_API_URL: ${ZOOM_API_URL}
      EMAIL_USER: ${EMAIL_USER}
      SPREADSHEET_NAME: ${SPREADSHEET_NAME}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
      REDIS_URL: redis://redis:6379
      MONGODB_URI: mongodb://mongodb:27017/meetings
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network


volumes:
  redis_data:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  app-network:
    driver: bridge